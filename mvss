local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/FabsKebabs/load/refs/heads/main/Source')))()

local Window = OrionLib:MakeWindow({
    Name = [[<font color="rgb(255,0,0)">Publoader-MurderVsSherrifs</font>]],
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "Subscribe To Pubzy"
})

local Tab1 = Window:MakeTab({Name = "Main", Icon = "", PremiumOnly = false})
local Tab3 = Window:MakeTab({Name = "ESP", Icon = "", PremiumOnly = false})
local Tab2 = Window:MakeTab({Name = "Character", Icon = "", PremiumOnly = false})

local Expander = false
local AimBotEnabled = false
local ESPEnabled = false
local WalkSpeedValue = 16
local HB_Settings = {
    Color = Color3.new(1, 0, 0),
    Transparency = 0.5,
    Size = 2
}

local Player = game.Players.LocalPlayer
local RunService = game:GetService("RunService")

-- Reset All Features Function
local function resetAllFeatures()
    Expander = false
    AimBotEnabled = false
    ESPEnabled = false
    HB_Settings.Size = 2
    HB_Settings.Transparency = 0.5

    -- Reset Hitboxes
    for _, plr in pairs(game.Players:GetPlayers()) do
        if plr ~= Player then
            local character = plr.Character
            if character then
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    hrp.Size = Vector3.new(2, 2, 2)
                    hrp.Transparency = 1
                    hrp.Color = Color3.new(1, 1, 1)
                end
            end
        end
    end

    -- Reset WalkSpeed
    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
        Player.Character.Humanoid.WalkSpeed = 16
    end

    -- Notify the user
    OrionLib:MakeNotification({
        Name = "Reset Complete",
        Content = "All features have been reset!",
        Time = 3
    })
end

-- Function to Apply Hitbox Changes
local function updateHitboxes()
    for _, plr in pairs(game.Players:GetPlayers()) do
        if plr ~= Player then
            local character = plr.Character
            if character then
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    hrp.Size = Vector3.new(HB_Settings.Size, HB_Settings.Size, HB_Settings.Size)
                    hrp.Transparency = HB_Settings.Transparency
                    hrp.Color = HB_Settings.Color
                end
            end
        end
    end
end

-- Safe WalkSpeed Toggle
local function setWalkSpeed()
    if Player.Character and Player.Character:FindFirstChild("Humanoid") then
        Player.Character.Humanoid.WalkSpeed = WalkSpeedValue
    end
end

-- Ensure WalkSpeed Persists on Respawn
Player.CharacterAdded:Connect(function()
    wait(1)
    setWalkSpeed()
end)

-- ESP Toggle
Tab3:AddToggle({
    Name = "Skeleton ESP",
    Default = false,
    Callback = function(Value)
        ESPEnabled = Value
        if ESPEnabled then
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Blissful4992/ESPs/main/SkeletonESP.lua"))()
            OrionLib:MakeNotification({
                Name = "ESP Enabled",
                Content = "Skeleton ESP has been activated!",
                Time = 3
            })
        else
            OrionLib:MakeNotification({
                Name = "ESP Disabled",
                Content = "Skeleton ESP has been turned off.",
                Time = 3
            })
            -- Placeholder: Add a disable function if available
        end
    end
})

-- Main Tab: HitBox Expander
Tab1:AddToggle({
    Name = "HitBox Expander",
    Default = false,
    Callback = function(Value)
        Expander = Value
        if Expander then
            updateHitboxes()
        else
            resetAllFeatures() -- Reset hitboxes when turned off
        end
    end
})

-- Main Tab: AimBot
Tab1:AddToggle({
    Name = "AimBot",
    Default = false,
    Callback = function(Value)
        AimBotEnabled = Value
        if AimBotEnabled then
            HB_Settings.Size = 9999999
            HB_Settings.Transparency = 1
            updateHitboxes()
            OrionLib:MakeNotification({
                Name = "AimBot Enabled",
                Content = "AimBot is now active!",
                Time = 3
            })
        else
            HB_Settings.Size = 2
            HB_Settings.Transparency = 0.5
            updateHitboxes()
            OrionLib:MakeNotification({
                Name = "AimBot Disabled",
                Content = "AimBot has been turned off.",
                Time = 3
            })
        end
    end
})

-- Character Tab: WalkSpeed Toggle
Tab2:AddSlider({
    Name = "WalkSpeed",
    Min = 0,
    Max = 50,
    Default = 16,
    Increment = 1,
    ValueName = "Speed",
    Callback = function(Value)
        WalkSpeedValue = Value
        setWalkSpeed()
    end
})

-- Hitbox Configuration
Tab1:AddSection({Name = "HitBox Configuration"})

Tab1:AddColorpicker({
    Name = "HitBox Color",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(Value)
        HB_Settings.Color = Value
        if Expander then updateHitboxes() end
    end
})

Tab1:AddSlider({
    Name = "HitBox Size",
    Min = 2,
    Max = 50,
    Default = 2,
    Increment = 1,
    ValueName = "Size",
    Callback = function(Value)
        HB_Settings.Size = Value
        if Expander then updateHitboxes() end
    end
})

Tab1:AddSlider({
    Name = "HitBox Transparency",
    Min = 0,
    Max = 1,
    Default = 0.5,
    Increment = 0.1,
    ValueName = "Transparency",
    Callback = function(Value)
        HB_Settings.Transparency = Value
        if Expander then updateHitboxes() end
    end
})

-- Reset All Features Button
Tab1:AddButton({
    Name = "Reset All Features",
    Callback = function()
        resetAllFeatures()
    end
})
