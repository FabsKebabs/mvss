local OrionLib = loadstring(game:HttpGet(
('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

local Window = OrionLib:MakeWindow({
    Name = [[<font color="rgb(255,0,0)">Publoader-MurderVsSherrifs</font>]],
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "Subscribe To Pubzy"
})

local Tab1 = Window:MakeTab({Name = "Main", Icon = "", PremiumOnly = false})
local Tab3 = Window:MakeTab({Name = "ESP", Icon = "", PremiumOnly = false})
local Tab2 = Window:MakeTab({Name = "Character", Icon = "", PremiumOnly = false})
local Expander = false

local HB_Settings = {
    Color = Color3.new(1, 0, 0), -- Default to red if not set
    Transparency = 0.5,
    Size = 2
}

local Player = game.Players.LocalPlayer

-- Function to add hitbox changes
function addHitBoxChanges()
    while Expander do
        wait(0.1)
        for i, plr in pairs(game.Players:GetPlayers()) do
            if plr ~= Player and plr.Team ~= Player.Team then
                local character = plr.Character
                if character then
                    local hrp = character:FindFirstChild("HumanoidRootPart")
                    if hrp then
                        hrp.Size = Vector3.new(HB_Settings.Size, HB_Settings.Size, HB_Settings.Size)
                        hrp.CanCollide = false
                        hrp.Transparency = HB_Settings.Transparency
                        hrp.Color = HB_Settings.Color
                    end
                end
            end
        end
    end

    -- Revert changes when Expander is false
    for i, plr in pairs(game.Players:GetPlayers()) do
        if plr ~= Player and plr.Team ~= Player.Team then
            local character = plr.Character
            if character then
                local hrp = character:FindFirstChild("HumanoidRootPart")
                if hrp then
                    hrp.Size = Vector3.new(2, 2, 2)
                    hrp.CanCollide = false
                    hrp.Transparency = 1
                    hrp.Color = Color3.new(1, 1, 1)
                end
            end
        end
    end
end

-- Function to teleport enemy to click position
local function teleportToClick()
    local mouse = Player:GetMouse()
    mouse.Button1Down:Connect(function()
        if AimBotEnabled then
            local targetPosition = mouse.Hit.p
            for i, plr in pairs(game.Players:GetPlayers()) do
                if plr ~= Player and plr.Team ~= Player.Team then
                    local character = plr.Character
                    if character then
                        local hrp = character:FindFirstChild("HumanoidRootPart")
                        if hrp then
                            hrp.CFrame = CFrame.new(targetPosition)
                        end
                    end
                end
            end
        end
    end)
end

-- GUI Elements
Tab1:AddToggle({
    Name = "HitBox Expander",
    Default = false,
    Callback = function(v)
        Expander = v
        if Expander then
            addHitBoxChanges()
        end
    end
})

Tab1:AddToggle({
    Name = "AimBot",
    Default = false,
    Callback = function(v)
        AimBotEnabled = v
        if AimBotEnabled then
            HB_Settings.Size = 9999999
            HB_Settings.Transparency = 1
            addHitBoxChanges()
            teleportToClick()
        else
            HB_Settings.Size = 2
            HB_Settings.Transparency = 0.5
        end
    end
})

Tab1:AddSection({
    Name = "HitBox Configuration"
})

Tab1:AddColorpicker({
	Name = "HitBox Color",
	Default = Color3.fromRGB(255, 0, 0),
	Callback = function(Value)
		HB_Settings.Color = Value
        print(Value)
	end	  
})

Tab1:AddSlider({
    Name = "HitBox Size",
    Min = 2,
    Max = 50,
    Default = 2,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 1,
    ValueName = "Size",
    Callback = function(Value)
        HB_Settings.Size = Value
    end
})

Tab1:AddSlider({
    Name = "HitBox Transparency",
    Min = 0,
    Max = 1,
    Default = .5,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = .1,
    ValueName = "Transparency",
    Callback = function(Value)
        HB_Settings.Transparency = Value
    end
})

Tab2:AddSlider({
    Name = "WalkSpeed",
    Min = 0,
    Max = 50,
    Default = 16,
    Color = Color3.fromRGB(255, 0, 0),
    Increment = 1,
    ValueName = "WalkSpeed",
    Callback = function(Value)
        Player.Character.Humanoid.WalkSpeed = Value
    end
})

Tab3:AddButton({
    Name = "Bubble ESP",
    Callback = function()
        local Players = game:GetService("Players")
        local Camera = workspace.CurrentCamera
        local RunService = game:GetService("RunService")
        local LocalPlayer = Players.LocalPlayer

        local bubbles = {}
        local bubbleESPEnabled = true

        -- Function to draw a bubble
        local function createBubble()
            local bubble = Drawing.new("Circle")
            bubble.Visible = false
            bubble.Color = Color3.fromRGB(0, 255, 255) -- Cyan color for bubbles
            bubble.Thickness = 2
            bubble.Transparency = 0.5
            bubble.Filled = false
            return bubble
        end

        -- Function to draw ESP for a specific player
        local function drawBubbleForPlayer(player)
            if player == LocalPlayer then return end
            local bubble = createBubble()
            bubbles[player] = bubble

            local function updateBubble()
                RunService.RenderStepped:Connect(function()
                    if not bubbleESPEnabled or not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
                        bubble.Visible = false
                        return
                    end

                    local hrp = player.Character.HumanoidRootPart
                    local position, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                    if onScreen then
                        bubble.Visible = true
                        bubble.Position = Vector2.new(position.X, position.Y)
                        bubble.Radius = math.clamp(300 / position.Z, 10, 100) -- Adjust radius based on distance
                    else
                        bubble.Visible = false
                    end
                end)
            end

            coroutine.wrap(updateBubble)()
        end

        -- Cleanup bubbles when disabled
        local function cleanupBubbles()
            for _, bubble in pairs(bubbles) do
                bubble.Visible = false
                bubble:Remove()
            end
            bubbles = {}
        end

        -- Toggle ESP on/off
        if bubbleESPEnabled then
            bubbleESPEnabled = false
            cleanupBubbles()
        else
            bubbleESPEnabled = true
            for _, player in ipairs(Players:GetPlayers()) do
                drawBubbleForPlayer(player)
            end
        end

        -- Update bubbles for new players
        Players.PlayerAdded:Connect(function(player)
            if bubbleESPEnabled then
                drawBubbleForPlayer(player)
            end
        end)

        -- Remove bubbles for leaving players
        Players.PlayerRemoving:Connect(function(player)
            if bubbles[player] then
                bubbles[player]:Remove()
                bubbles[player] = nil
            end
        end)
    end
})
